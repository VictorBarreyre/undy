// services/SightengineService.js - SERVICE COMPL√àTEMENT D√âSACTIV√â

/**
 * SIGHTENGINE SERVICE COMPL√àTEMENT D√âSACTIV√â
 * 
 * Ce service est enti√®rement d√©sactiv√© pour √©liminer toute mod√©ration
 * d'images, vid√©os et audio via Sightengine.
 * 
 * Toutes les fonctions retournent imm√©diatement un r√©sultat autoris√©
 * sans faire aucun appel API.
 */

console.log('üö´ SightengineService: SERVICE COMPL√àTEMENT D√âSACTIV√â');

/**
 * Mod√©ration d'image D√âSACTIV√âE
 * @param {string} imageUri - URI de l'image (ignor√©)
 * @returns {Promise<Object>} - Toujours autoris√©
 */
export const moderateImage = async (imageUri) => {
  console.log('üñºÔ∏è SightengineService: Mod√©ration d\'image D√âSACTIV√âE - autorisation automatique');
  
  return {
    isFlagged: false,
    reason: null,
    disabled: true,
    service: 'sightengine',
    message: 'Service SightengineService compl√®tement d√©sactiv√©'
  };
};

/**
 * Soumission de vid√©o D√âSACTIV√âE
 * @param {string} videoUri - URI de la vid√©o (ignor√©)
 * @returns {Promise<Object>} - Toujours autoris√©
 */
export const submitVideoForModeration = async (videoUri) => {
  console.log('üé• SightengineService: Soumission de vid√©o D√âSACTIV√âE - autorisation automatique');
  
  return {
    success: true,
    workflowId: null,
    status: 'disabled',
    disabled: true,
    service: 'sightengine',
    message: 'Service SightengineService compl√®tement d√©sactiv√©'
  };
};

/**
 * V√©rification de statut vid√©o D√âSACTIV√âE
 * @param {string} workflowId - ID du workflow (ignor√©)
 * @returns {Promise<Object>} - Toujours autoris√©
 */
export const checkVideoModerationStatus = async (workflowId) => {
  console.log('üé• SightengineService: V√©rification de statut D√âSACTIV√âE - autorisation automatique');
  
  return {
    success: true,
    status: 'disabled',
    progress: 100,
    workflowId: null,
    disabled: true,
    isFlagged: false,
    service: 'sightengine',
    message: 'Service SightengineService compl√®tement d√©sactiv√©'
  };
};

/**
 * Mod√©ration d'audio D√âSACTIV√âE (ajout pour compatibilit√©)
 * @param {string} audioUri - URI de l'audio (ignor√©)
 * @returns {Promise<Object>} - Toujours autoris√©
 */
export const moderateAudio = async (audioUri) => {
  console.log('üéµ SightengineService: Mod√©ration d\'audio D√âSACTIV√âE - autorisation automatique');
  
  return {
    isFlagged: false,
    reason: null,
    disabled: true,
    service: 'sightengine',
    message: 'Service SightengineService compl√®tement d√©sactiv√©'
  };
};

/**
 * √âtat du service de mod√©ration
 * @returns {Object} - √âtat du service (compl√®tement d√©sactiv√©)
 */
export const getModerationStatus = () => {
  return {
    serviceEnabled: false,
    imageModeration: false,
    videoModeration: false,
    audioModeration: false,
    message: 'Service SightengineService compl√®tement d√©sactiv√© - AUCUNE mod√©ration active'
  };
};

/**
 * Test de connexion D√âSACTIV√â
 * @returns {Promise<boolean>} - Toujours false (service d√©sactiv√©)
 */
export const testConnection = async () => {
  console.log('üö´ SightengineService: Test de connexion D√âSACTIV√â');
  return false;
};

// Export par d√©faut avec toutes les fonctions d√©sactiv√©es
export default {
  moderateImage,
  submitVideoForModeration,
  checkVideoModerationStatus,
  moderateAudio,
  getModerationStatus,
  testConnection,
  
  // M√©tadonn√©es du service
  serviceStatus: {
    enabled: false,
    name: 'SightengineService',
    version: 'disabled',
    message: 'Service compl√®tement d√©sactiv√©'
  }
};

/* 
===================================================================
TOUT LE CODE ORIGINAL SIGHTENGINE A √âT√â SUPPRIM√â
===================================================================

Ce service ne fait plus AUCUN appel √† Sightengine.
Toutes les images, vid√©os et audio sont automatiquement autoris√©es.

Pour r√©activer Sightengine, il faudrait :
1. Restaurer le code original
2. Reconfigurer les cl√©s API
3. R√©activer les appels dans les autres services

===================================================================
*/